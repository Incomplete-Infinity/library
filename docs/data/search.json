{"list":[{"title":"ApiUtil.executeApiDeleteRequest","link":"<a href=\"ApiUtil.html#.executeApiDeleteRequest\">executeApiDeleteRequest</a>","description":"<p>Executes single DELETE request and fires callback.</p>"},{"title":"ApiUtil.executeApiGetRequest","link":"<a href=\"ApiUtil.html#.executeApiGetRequest\">executeApiGetRequest</a>","description":"<p>Executes single GET request and fires callback once for each returned page.</p>"},{"title":"ApiUtil.executeApiPatchRequest","link":"<a href=\"ApiUtil.html#.executeApiPatchRequest\">executeApiPatchRequest</a>","description":"<p>Executes single PATCH request and fires callback.</p>"},{"title":"ApiUtil.executeApiPostRequest","link":"<a href=\"ApiUtil.html#.executeApiPostRequest\">executeApiPostRequest</a>","description":"<p>Executes single CREATE request and fires callback.</p>"},{"title":"ApiUtil.replaceInputValues","link":"<a href=\"ApiUtil.html#.replaceInputValues\">replaceInputValues</a>","description":"<p>Takes in a string with placeholders like ${variable}\nand replaces them with values found in selected sheet's top part.</p>"},{"title":"CellTranslator","link":"<a href=\"CellTranslator.html\">CellTranslator</a>"},{"title":"CellTranslator#toDisplayValue","link":"<a href=\"CellTranslator.html#toDisplayValue\">toDisplayValue</a>"},{"title":"CellTranslator#toEntityField","link":"<a href=\"CellTranslator.html#toEntityField\">toEntityField</a>"},{"title":"DateTranslator","link":"<a href=\"DateTranslator.html\">DateTranslator</a>"},{"title":"DateTranslator#toDisplayValue","link":"<a href=\"DateTranslator.html#toDisplayValue\">toDisplayValue</a>"},{"title":"DateTranslator#toEntityField","link":"<a href=\"DateTranslator.html#toEntityField\">toEntityField</a>"},{"title":"SheetUtil.appendOutputToRange","link":"<a href=\"SheetUtil.html#.appendOutputToRange\">appendOutputToRange</a>","description":"<p>Writes the given two-dimensional Array of data to the specified\nsheet, appending the data to any already existing data in the</p>"},{"title":"SheetUtil.clearData","link":"<a href=\"SheetUtil.html#.clearData\">clearData</a>","description":"<p>Clears all entity data in the specified sheet.</p>"},{"title":"SheetUtil.deleteSheetRows","link":"<a href=\"SheetUtil.html#.deleteSheetRows\">deleteSheetRows</a>","description":"<p>Removes row from the sheet by sheet name and number</p>"},{"title":"SheetUtil.getCurrentlySelectedDataRowNumber","link":"<a href=\"SheetUtil.html#.getCurrentlySelectedDataRowNumber\">getCurrentlySelectedDataRowNumber</a>","description":"<p>Returns currently selected row (number) for chosen sheet.\nThrows error if currently selected row isn't in data part of the sheet,\nor if</p>"},{"title":"SheetUtil.getHeaderRowData","link":"<a href=\"SheetUtil.html#.getHeaderRowData\">getHeaderRowData</a>","description":"<p>Returns values in header row of selected sheet\nas a 1-dim Array.</p>"},{"title":"SheetUtil.getInputCellValues","link":"<a href=\"SheetUtil.html#.getInputCellValues\">getInputCellValues</a>","description":"<p>Retrieves value of input cell configured in configuration.js</p>"},{"title":"SheetUtil.getRowData","link":"<a href=\"SheetUtil.html#.getRowData\">getRowData</a>","description":"<p>Returns the row data for the given sheet and range as a two-dimensional\nArray of length 1.</p>"},{"title":"SheetUtil.readDataRows","link":"<a href=\"SheetUtil.html#.readDataRows\">readDataRows</a>","description":"<p>Reads all rows of a sheet designated by sheetConfig\nand returns cell values as {!Array&lt;!RowData&gt;}</p>"},{"title":"Util.difference","link":"<a href=\"Util.html#.difference\">difference</a>"},{"title":"Util.extend","link":"<a href=\"Util.html#.extend\">extend</a>","description":"<p>Extends an object identified by 'original' with the values in 'extension'.\n'extension' will be returned if 'original' is null, otherwise 'original'\nwill get extended. Array values in 'extension' will be appended to existing\narrays in 'original', however all other objects in 'extension' will\noverride existing counterparts in 'original'. The plain JS type of\n'original' will be preserved (if it wasn't null or undefined - i.e. passing\nan instance of a specific class will not be overrided, rather extended).</p>"},{"title":"Util.flattenObject","link":"<a href=\"Util.html#.flattenObject\">flattenObject</a>","description":"<p>Traverses object's sub-structure and converts it\nfrom {a:{b:{c:&quot;value&quot;}}} to {&quot;a.b.c&quot;:&quot;value&quot;}</p>"},{"title":"Util.getValueByDottedFieldName","link":"<a href=\"Util.html#.getValueByDottedFieldName\">getValueByDottedFieldName</a>","description":"<p>Retrieves value from nested sub-objects by dot-separated path\n(aka 'dotted field name')</p>"},{"title":"Util.isIn","link":"<a href=\"Util.html#.isIn\">isIn</a>"},{"title":"Util.listDottedFields","link":"<a href=\"Util.html#.listDottedFields\">listDottedFields</a>","description":"<p>Unnests field names in an object, producing array of\n'field.nestedfield.subnestedfield'</p>"},{"title":"Util.modifyUrlQueryString","link":"<a href=\"Util.html#.modifyUrlQueryString\">modifyUrlQueryString</a>","description":"<p>Modifies a url by either appending the 'key' and 'value' to the end of the\nurl if the 'key' was not present or replacing the value of the 'key' if it\nexisted. Multiple values for the same key will all be replaced by a single\nkey-value pair at the first seen key location. Assumes that all params have\nalready been URL encoded.</p>"},{"title":"Util.setValueByDottedFieldName","link":"<a href=\"Util.html#.setValueByDottedFieldName\">setValueByDottedFieldName</a>"},{"title":"addCustomProperty","link":"<a href=\"global.html#addCustomProperty\">addCustomProperty</a>","description":"<p>Adds a custom property to a file. Unlike Apps Script's DocumentProperties,\nDrive's custom file properties can be accessed outside of Apps Script and\nby other applications (if the visibility is set to PUBLIC).</p>"},{"title":"cacheUrlFetchApp","link":"<a href=\"global.html#cacheUrlFetchApp\">cacheUrlFetchApp</a>","description":"<p>Checks if the return from a Url fetch is in cache. If so, it retrieves it from cache instead of making another network request. If not, it makes a new request and adds it to the cache</p>"},{"title":"cardinalToOrdinal","link":"<a href=\"global.html#cardinalToOrdinal\">cardinalToOrdinal</a>","description":"<p>The function converts a cardinal number to its corresponding ordinal form.</p>"},{"title":"createTree","link":"<a href=\"global.html#createTree\">createTree</a>","description":"<p>createTree method for FilesApp.<br></p>\n<ul>\n<li>Create a file and folder tree. Retrieve all folders of all level under folderId. All files and folders are included in an array with the level.</li>\n</ul>"},{"title":"cropCols","link":"<a href=\"global.html#cropCols\">cropCols</a>","description":"<p>Deletes any blank columns in a given sheet, leaving a minimum number of columns.</p>"},{"title":"cropRows","link":"<a href=\"global.html#cropRows\">cropRows</a>","description":"<p>Deletes any blank rows in a given sheet, leaving a minimum number of rows.</p>"},{"title":"cropSheet","link":"<a href=\"global.html#cropSheet\">cropSheet</a>","description":"<p>Crops a given sheet by deleting any blank rows or columns, leaving a minimum number of rows and columns.</p>"},{"title":"daysSince","link":"<a href=\"global.html#daysSince\">daysSince</a>","description":"<p>The function calculates the number of days between a given date and the current date.</p>"},{"title":"driveWrite","link":"<a href=\"global.html#driveWrite\">driveWrite</a>","description":"<p>Saves the given <code>object</code> in the user's drive with the given <code>title</code> and <code>mimeType</code>.\nIt then logs the <code>file name</code>, <code>ID</code>, <code>size</code> (in bytes), and <code>type</code> of the newly created file.</p>"},{"title":"ensure2dArray","link":"<a href=\"global.html#ensure2dArray\">ensure2dArray</a>","description":"<p>This function takes an input data and checks if it is a two-dimensional array. If the input data is not an array, it wraps it in a single-element array. If the input data is already a two-dimensional array, it returns the data as-is.</p>"},{"title":"getAllFoldersInFolder","link":"<a href=\"global.html#getAllFoldersInFolder\">getAllFoldersInFolder</a>","description":"<p>getAllFoldersInFolder method for FilesApp.<br></p>\n<ul>\n<li>Retrieve all folders of all level under folderId.</li>\n</ul>"},{"title":"getAllInFolder","link":"<a href=\"global.html#getAllInFolder\">getAllInFolder</a>","description":"<p>getAllInFolder method for FilesApp.<br></p>\n<ul>\n<li>Retrieve all files and folders of all level under folderId. All files and folders are included in an array without the level.</li>\n</ul>"},{"title":"getDatetimeCol","link":"<a href=\"global.html#getDatetimeCol\">getDatetimeCol</a>","description":"<p>This function retrieves the column index of a timestamp header in a Google Sheets spreadsheet.</p>"},{"title":"getFilesAndFoldersInFolder","link":"<a href=\"global.html#getFilesAndFoldersInFolder\">getFilesAndFoldersInFolder</a>","description":"<p>GitHub  https://github.com/tanaikech/FilesApp<br>\ngetFilesAndFoldersInFolder method for FilesApp.<br></p>\n<ul>\n<li>Retrieve files and folders just under a folder with folderId.</li>\n</ul>"},{"title":"getFolderByName","link":"<a href=\"global.html#getFolderByName\">getFolderByName</a>","description":"<p>Returns a Google Drive folder in the same location\nin Drive where the spreadsheet is located. First, it checks if the folder\nalready exists and returns that folder. If the folder doesn't already\nexist, the script creates a new one. The folder's name is set by the\n&quot;OUTPUT_FOLDER_NAME&quot; variable from the Code.gs file.</p>"},{"title":"getFolderContents","link":"<a href=\"global.html#getFolderContents\">getFolderContents</a>","description":"<p>Return an array of up to 20 filenames contained in the folder previously specified (or the root folder by default).</p>"},{"title":"onEdit","link":"<a href=\"global.html#onEdit\">onEdit</a>","description":"<p>This function automatically adds a timestamp to a specific column in a Google Sheets document when a\ncell in another column is edited.</p>"},{"title":"prepareSheet","link":"<a href=\"global.html#prepareSheet\">prepareSheet</a>"},{"title":"propService.docProps.read()","link":"<a href=\"propService.docProps.html#.read()\">read()</a>","description":"<p>Reads properties with the given keys the given object to script properties and writes them to the object parameter.</p>"},{"title":"propService.scriptProps.read()","link":"<a href=\"propService.scriptProps.html#.read()\">read()</a>","description":"<p>Reads properties with the given keys the given object to script properties and writes them to the object parameter.</p>"},{"title":"propService.scriptProps.write()","link":"<a href=\"propService.scriptProps.html#.write()\">write()</a>","description":"<p>Writes the given object's key/value pairs to script properties</p>"},{"title":"propService.scriptProps.write()","link":"<a href=\"propService.scriptProps.html#.write()\">write()</a>","description":"<p>Writes the given object's key/value pairs to script properties</p>"},{"title":"propService.userProps.read()","link":"<a href=\"propService.userProps.html#.read()\">read()</a>","description":"<p>Reads properties with the given keys the given object to user properties and writes them to the object parameter.</p>"},{"title":"propService.userProps.write()","link":"<a href=\"propService.userProps.html#.write()\">write()</a>","description":"<p>Writes the given object's key/value pairs to user properties</p>"},{"title":"readDrive","link":"<a href=\"global.html#readDrive\">readDrive</a>","description":"<p>Accesses a file of the users's drive with the given fileID</p>"},{"title":"removeDuplicateRows","link":"<a href=\"global.html#removeDuplicateRows\">removeDuplicateRows</a>","description":"<p>This function removes duplicate rows from a Google Sheets spreadsheet.</p>"},{"title":"sheets.js","link":"<a href=\"sheets.js.html\">sheets.js</a>","description":"<p>This Google Apps Script file contains general utility methods\nused by the different modules in this application.</p>"},{"title":"timestamp","link":"<a href=\"global.html#timestamp\">timestamp</a>","description":"<p>Assembles and returns a timestamp string in the format of &quot;yyyy-MM-ddThh:mm:ssZ&quot;, where &quot;yyyy&quot; is the year, &quot;MM&quot; is the month, &quot;dd&quot; is the day, &quot;hh&quot; is the hour, &quot;mm&quot; is the minute, &quot;ss&quot; is the second, and &quot;Z&quot; indicates that the timestamp is in UTC time.</p>"}]}